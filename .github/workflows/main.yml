name: Unity Actions

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneWindows64

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Cache Library
        id: cache-library
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-build-${{ matrix.targetPlatform }}
          restore-keys: Library-build-${{ matrix.targetPlatform }}-

      - name: Build Unity Project
        id: build
        uses: game-ci/unity-builder@main
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}

      - name: Upload Build
        uses: actions/upload-artifact@v2
        with:
          name: build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}

      - name: Zip Build
        if: startsWith(github.ref, 'refs/tags/v') && matrix.targetPlatform == 'StandaloneWindows64'
        run: zip -qq -r build/build-${{ matrix.targetPlatform }}.zip build/${{ matrix.targetPlatform }}

      - name: Publish Release
        if: startsWith(github.ref, 'refs/tags/v') && matrix.targetPlatform == 'StandaloneWindows64'
        uses: elgohr/Github-Release-Action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          title: Release for ${{ matrix.targetPlatform }}
